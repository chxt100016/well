<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wella.dao.LogisticsInfoDao">
    <resultMap id="LogisticsInfoMap" type="org.wella.entity.LogisticsInfo" >
        <id column="logistics_id" property="logisticsId" jdbcType="BIGINT" />
        <result column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="prod_id" property="prodId" jdbcType="BIGINT" />
        <result column="customer_user_id" property="customerUserId" jdbcType="BIGINT" />
        <result column="seller_user_id" property="sellerUserId" jdbcType="BIGINT" />
        <result column="prod_name" property="prodName" jdbcType="VARCHAR" />
        <result column="customer_user_name" property="customerUserName" jdbcType="VARCHAR" />
        <result column="num" property="num" jdbcType="DOUBLE" />
        <result column="pre_payment" property="prePayment" jdbcType="DOUBLE" />
        <result column="state" property="state" jdbcType="TINYINT" />
        <result column="order_date" property="orderDate" jdbcType="DATE" />
        <result column="deliver_date" property="deliverDate" jdbcType="DATE" />
        <result column="from_address" property="fromAddress" jdbcType="VARCHAR" />
        <result column="seller_user_name" property="sellerUserName" jdbcType="VARCHAR" />
        <result column="to_address" property="toAddress" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="createLogisticsInfo" parameterType="org.wella.entity.LogisticsInfo">
        INSERT INTO wa_logistics_info
        SET order_id = #{orderId},
            from_address = #{fromAddress},
            to_address = #{toAddress},
            num = #{num},
            pre_payment = #{prePayment},
            state = #{state},
            order_date = #{orderDate},
            deliver_date = #{deliverDate},
            prod_id = #{prodId},
            prod_name = #{prodName},
            seller_user_name = #{sellerUserName},
            seller_user_id = #{sellerUserId},
            customer_user_name = #{customerUserName},
            customer_user_id = #{customerUserId}
    </insert>

    <select id="findLogisticsInfos" parameterType="java.util.Map" resultMap="LogisticsInfoMap">
        SELECT * from wa_logistics_info
        <where>
            <if test = "orderId != null" >
                AND order_id = #{orderId}
            </if>
            <if test = "logistics != null" >
                AND logistics_id = #{logisticsId}
            </if>
            <if test = "userName != null">
                AND (customer_user_name LIKE '%${userName}%' OR seller_user_name LIKE '%${userName}%')
            </if>
            <if test = "state != null">
                AND state=#{state}
            </if>
            <if test="wlUserId != null">
                AND logistics_id NOT IN (SELECT logistics_info_id FROM wa_vehicle_grab WHERE sender_user_id=#{wlUserId})
            </if>
        </where>
        ORDER BY order_date DESC
        <if test="start !=null and size !=null">
        LIMIT ${start} , ${size}
        </if>
    </select>

    <select id="findLogisticsInfosCount" parameterType="java.util.Map" resultType="int">
        SELECT count(*) from wa_logistics_info
        <where>
            <if test = "orderId != null" >
                AND order_id = #{orderId}
            </if>
            <if test = "userName != null">
                AND (customer_user_name LIKE '%${userName}%' OR seller_user_name LIKE '%${userName}%')
            </if>
        </where>
    </select>

    <select id="findLogisticsInfo" parameterType="java.util.Map" resultMap="LogisticsInfoMap">
        SELECT * FROM wa_logistics_info
        <where>
            <if test = "logisticsId != null" >
                AND logistics_id = #{logisticsId}
            </if>
        </where>
    </select>

    <update id="updateByPrimaryKey" parameterType="map">
        update wa_logistics_info
        <set >
            <if test="orderId != null" >
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="prodId != null" >
                prod_id = #{prodId,jdbcType=BIGINT},
            </if>
            <if test="customerUserId != null" >
                customer_user_id = #{customerUserId,jdbcType=BIGINT},
            </if>
            <if test="sellerUserId != null" >
                seller_user_id = #{sellerUserId,jdbcType=BIGINT},
            </if>
            <if test="prodName != null" >
                prod_name = #{prodName,jdbcType=VARCHAR},
            </if>
            <if test="customerUserName != null" >
                customer_user_name = #{customerUserName,jdbcType=VARCHAR},
            </if>
            <if test="num != null" >
                num = #{num,jdbcType=DOUBLE},
            </if>
            <if test="prePayment != null" >
                pre_payment = #{prePayment,jdbcType=DOUBLE},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="orderDate != null" >
                order_date = #{orderDate,jdbcType=DATE},
            </if>
            <if test="deliverDate != null" >
                deliver_date = #{deliverDate,jdbcType=DATE},
            </if>
            <if test="fromAddress != null" >
                from_address = #{fromAddress,jdbcType=VARCHAR},
            </if>
            <if test="sellerUserName != null" >
                seller_user_name = #{sellerUserName,jdbcType=VARCHAR},
            </if>
            <if test="toAddress != null" >
                to_address = #{toAddress,jdbcType=VARCHAR},
            </if>
            <if test="orderPrice != null" >
                order_price = #{orderPrice,jdbcType=DOUBLE},
            </if>
            <if test="senderUserId != null" >
                sender_user_id = #{senderUserId,jdbcType=BIGINT},
            </if>
            <if test="vehicleGrabId != null" >
                vehicle_grab_id = #{vehicleGrabId,jdbcType=BIGINT},
            </if>
        </set>
        where logistics_id = #{logisticsId,jdbcType=BIGINT}
    </update>
    <!-- set块 和 where块 都可视业务继续添加条件-->
    <update id="updateByConditions" parameterType="map">
        update wa_logistics_info
        <set>
            <if test="state != null" >
                state = #{state,jdbcType=TINYINT},
            </if>
        </set>
        <where>
            <if test="orderId != null" >
                and order_id = #{orderId,jdbcType=BIGINT}
            </if>
        </where>
    </update>
</mapper>