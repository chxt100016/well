<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wella.dao.ZorderDao">

    <insert id="createZorder" useGeneratedKeys="true" keyProperty="zorderId" parameterType="org.wella.entity.Zorder">
     insert into wa_zorder (zorder_id, order_id, zorder_price,
      zorder_num, zorder_money, zorder_date,
      zorder_state, modify_date, user_id,
      admin_id, send_comment, receive_comment
      )
    values (#{zorderId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{zorderPrice,jdbcType=DECIMAL},
      #{zorderNum,jdbcType=DECIMAL}, #{zorderMoney,jdbcType=DECIMAL}, #{zorderDate,jdbcType=TIMESTAMP},
      #{zorderState,jdbcType=TINYINT}, #{modifyDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT},
      #{adminId,jdbcType=BIGINT}, #{sendComment,jdbcType=VARCHAR}, #{receiveComment,jdbcType=VARCHAR}
      )
    </insert>
    
    <update id="updateByPrimaryKey" parameterType="org.wella.entity.Zorder">
        update wa_zorder
        <set >
            <if test="orderId != null" >
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="zorderPrice != null" >
                zorder_price = #{zorderPrice,jdbcType=DECIMAL},
            </if>
            <if test="zorderNum != null" >
                zorder_num = #{zorderNum,jdbcType=DECIMAL},
            </if>
            <if test="zorderMoney != null" >
                zorder_money = #{zorderMoney,jdbcType=DECIMAL},
            </if>
            <if test="zorderDate != null" >
                zorder_date = #{zorderDate,jdbcType=TIMESTAMP},
            </if>
            <if test="zorderState != null" >
                zorder_state = #{zorderState,jdbcType=TINYINT},
            </if>
            <if test="modifyDate != null" >
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="adminId != null" >
                admin_id = #{adminId,jdbcType=BIGINT},
            </if>
            <if test="sendComment != null" >
                send_comment = #{sendComment,jdbcType=VARCHAR},
            </if>
            <if test="receiveComment != null" >
                receive_comment = #{receiveComment,jdbcType=VARCHAR},
            </if>
        </set>
        where zorder_id = #{zorderId,jdbcType=BIGINT}
    </update>

    <select id="findProdCountByConditions" parameterType="map" resultType="map">
        SELECT IFNULL(SUM(zorder_num),0) sum_num,IFNULL(SUM(zorder_money),0) sum_money
        FROM wa_zorder
        WHERE order_id=#{orderId}
        <if test="zorderState == 1">
            AND zorder_state>=#{zorderState}
        </if>
        <if test="zorderState == 2">
            AND zorder_state=#{zorderState}
        </if>
    </select>

    <select id="listZordersByConditions" parameterType="map" resultType="map">
        SELECT *
        FROM wa_zorder
        <where>
            <if test="orderId != null">
                and order_id=${orderId}
            </if>
        </where>
        <if test="orderBy != null">
        order by ${orderBy}
    </if>
        <if test="start != null and size != null">
            limit ${start},${size}
        </if>
        <if test="start ==null and size !=null">
            limit ${size}
        </if>
    </select>

    <select id="singleZorderByPrimaryKey" parameterType="long" resultType="map">
        SELECT *
        from wa_zorder
        WHERE zorder_id=#{zorderId}
    </select>
</mapper>