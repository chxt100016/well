<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wella.dao.ProdDao">

	<resultMap id="prod" type="org.wella.entity.Prod" >
		<id column="prod_id" property="prodId" jdbcType="BIGINT" />
		<result column="prod_type" property="prodType" jdbcType="TINYINT" />
		<result column="prod_name" property="prodName" jdbcType="VARCHAR" />
		<result column="prod_img" property="prodImg" jdbcType="VARCHAR" />
		<result column="prod_intro" property="prodIntro" jdbcType="VARCHAR" />
		<result column="sale_num" property="saleNum" jdbcType="INTEGER" />
		<result column="prod_num" property="prodNum" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="prod_money" property="prodMoney" jdbcType="DECIMAL" />
		<result column="vehicle_sq_money_type" property="vehicleSqMoneyType" jdbcType="TINYINT" />
		<result column="vehicle_sq_money" property="vehicleSqMoney" jdbcType="TINYINT" />
		<result column="prod_state" property="prodState" jdbcType="TINYINT" />
		<result column="prod_lxr" property="prodLxr" jdbcType="VARCHAR" />
		<result column="prod_lxr_phone" property="prodLxrPhone" jdbcType="VARCHAR" />
		<result column="prod_region_id" property="prodRegionId" jdbcType="BIGINT" />
		<result column="prod_region_addr" property="prodRegionAddr" jdbcType="VARCHAR" />
		<result column="prod_price" property="prodPrice"/>
	</resultMap>

	<!--<parameterMap id="product" type="org.wella.entity.Prod">-->
		<!--<parameter property=""-->
	<!--</parameterMap>-->
	<!--商品的相关信息-->
	<sql id="selectForOrder">
		prod_id,
		prod_name,
		prod_type,
		user_id,
		prod_money,
		prod_lxr,
		prod_lxr_phone,
		prod_region_id,
		prod_region_addr
	</sql>

	<select id="getOrderProdByProdid" parameterType="long" resultType="org.wella.entity.Prod">
		SELECT
		<include refid="selectForOrder"></include>
		FROM wa_prod
		where prod_id = #{prodId}
	</select>

	<!--产品发布时调用-->
	<insert id="createProd" parameterType="map">
		INSERT INTO  wa_prod
		SET  prod_type = #{prodType},
		prod_name = #{prodName},
		prod_img = #{prodImg},
		prod_intro = #{prodIntro},
		sale_num = #{saleNum},
		prod_num = #{prodNum},
		user_id = #{userId},
		create_date = #{createDate},
		create_user_id = #{createUserId},
		vehicle_sq_money_type = #{vehicleSqMoneyType},
		vehicle_sq_money = #{vehicleSqMoney},
		prod_state = #{prodState},
		prod_lxr = #{prodLxr},
		prod_lxr_phone = #{prodLxrPhone},
		prod_region_id  = #{prodRegionId},
		prod_region_addr = #{prodRegionAddr},
		prod_price = #{prodPrice}
		<selectKey keyProperty="newId" resultType="String">
			select last_insert_id()
		</selectKey>
	</insert>

	<!--根据相关信息模糊查询，获取某一公司的所有产品-->
	<select id="findProdByConditions" parameterType="map" resultType="map">
		SELECT *
		FROM wa_prod
		<where>
			<if test="userId != null">
				AND user_id = #{userId}
			</if>
			<if test="prodName != null">
				AND prod_name LIKE '%${prodName}%'
			</if>
		</where>
		<if test="orderBy != null">
			order BY ${orderBy}
		</if>
		<if test="offset != null and limit != null">
			limit ${offset},${limit}
		</if>
	</select>

	<select id="findProdByConditionsCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM wa_prod
		<where>
			<if test="userId != null">
				AND user_id = #{userId}
			</if>
			<if test="prodName != null">
				AND prod_name LIKE '%${prodName}%'
			</if>
		</where>
	</select>

	<!-- 获得前台商品目录的函数 -->
	<select id="findUserProdList" parameterType="java.util.Map"  resultType = "java.util.Map"  >
		SELECT *
		FROM wa_prod_user a
		INNER JOIN wa_prod b ON a.prod_id = b.prod_id
		<where>
			AND b.prod_state = 2
			<if test = "userId != null">
				AND a.user_id = #{userId}
			</if>
		</where>
		ORDER BY log_id DESC
	</select>


	<select id="findProdById" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		<include refid="selectForOrder"></include>
		FROM wa_prod
		<if test="prodId !=null">
		where prod_id = ${prodId}
		</if>
	</select>

	<select id="findProdByUserId" parameterType="java.util.Map" resultType="org.wella.entity.Prod">
		SELECT *
		from wa_prod
		<where>
			<if test="userId != null">
				AND user_id = #{userId}
			</if>
			<if test="prodName != null">
				AND prod_name LIKE '%${prodName}%'
			</if>
			<if test="prodState != null">
				AND prod_state = #{prodState}
			</if>
		</where>
		<if test="orderBy != null">
			ORDER BY #{orderBy}
		</if>
		<if test="start !=null and size !=null">
			limit ${start},${size}
		</if>
	</select>

	<update id="updateProdByPrimaryKey" parameterType="map">
		update wa_prod
		<set>
			<if test="prodType != null" >
				prod_type = #{prodType,jdbcType=TINYINT},
			</if>
			<if test="prodName != null" >
				prod_name = #{prodName},
			</if>
			<if test="prodImg != null" >
				prod_img = #{prodImg,jdbcType=VARCHAR},
			</if>
			<if test="prodIntro != null" >
				prod_intro = #{prodIntro,jdbcType=VARCHAR},
			</if>
			<if test="saleNum != null" >
				sale_num = #{saleNum,jdbcType=INTEGER},
			</if>
			<if test="prodNum != null" >
				prod_num = #{prodNum,jdbcType=INTEGER},
			</if>
			<if test="userId != null" >
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="createDate != null" >
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null" >
				create_user_id = #{createUserId,jdbcType=BIGINT},
			</if>
			<if test="prodMoney != null" >
				prod_money = #{prodMoney,jdbcType=DECIMAL},
			</if>
			<if test="vehicleSqMoneyType != null" >
				vehicle_sq_money_type = #{vehicleSqMoneyType,jdbcType=TINYINT},
			</if>
			<if test="vehicleSqMoney != null" >
				vehicle_sq_money = #{vehicleSqMoney,jdbcType=TINYINT},
			</if>
			<if test="prodState != null" >
				prod_state = #{prodState,jdbcType=TINYINT},
			</if>
			<if test="prodLxr != null" >
				prod_lxr = #{prodLxr,jdbcType=VARCHAR},
			</if>
			<if test="prodLxrPhone != null" >
				prod_lxr_phone = #{prodLxrPhone,jdbcType=VARCHAR},
			</if>
			<if test="prodRegionId != null" >
				prod_region_id = #{prodRegionId,jdbcType=BIGINT},
			</if>
			<if test="prodRegionAddr != null" >
				prod_region_addr = #{prodRegionAddr,jdbcType=VARCHAR},
			</if>
			<if test="prodRegionAddr != null" >
				prod_price = #{prodPrice}
			</if>
		</set>
		where prod_id=${prodId}
	</update>

	<delete id="deleteProdByPrimaryKey" parameterType="long">
		delete from wa_prod
    	where prod_id = #{prodId,jdbcType=BIGINT}
	</delete>

	<select id="listProdAttachUser" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT p.*,u.`user_name`
		FROM wa_prod p LEFT JOIN wa_user u
		ON p.`user_id`=u.`user_id`
		<where>
			<if test="prodName != null">
				AND p.prod_name like '%${prodName}%'
			</if>
			<if test="userName != null">
				AND u.user_name like '%${userName}%'
			</if>
		</where>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
		<if test="offset != null and limit !=null">
			limit ${offset},${limit}
		</if>
	</select>

	<select id="listProdAttachUserCount" parameterType="map" resultType="int">
		SELECT count(*)
		FROM wa_prod p LEFT JOIN wa_user u
		ON p.`user_id`=u.`user_id`
		<where>
			<if test="prodName != null">
				AND p.prod_name like '%${prodName}%'
			</if>
			<if test="userName != null">
				AND u.user_name like '%${userName}%'
			</if>
		</where>
	</select>

	<select id="singleProdByPrimaryKey" parameterType="long" resultType="map">
		SELECT *
		from wa_prod
		WHERE prod_id=#{prodId}
	</select>

	<select id="totalCount" parameterType="map" resultType="int">
		SELECT COUNT(prod_id)
		FROM wa_prod
		WHERE 1=1
		<if test="userId != null">
			AND user_id = #{userId}
		</if>
		<if test="prodName != null">
			AND prod_name LIKE '%${prodName}%'
		</if>
		<if test="prodState != null">
			AND prod_state = #{prodState}
		</if>
	</select>
</mapper>