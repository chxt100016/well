<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wella.dao.BankcardDao">
    <resultMap id="BankcardMap" type="org.wella.entity.Bankcard">
        <id column="bankcard_id" jdbcType="BIGINT" property="bankcardId" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="account_name" jdbcType="VARCHAR" property="accountName" />
        <result column="cert_type" jdbcType="TINYINT" property="certType" />
        <result column="cert_num" jdbcType="VARCHAR" property="certNum" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="open_bank_tgfi" jdbcType="VARCHAR" property="openBankTgfi" />
        <result column="open_bank_name" jdbcType="VARCHAR" property="openBankName" />
        <result column="state" jdbcType="TINYINT" property="state" />
    </resultMap>

    <!--获取用户所有的银行卡-->
	<select id="getCardListByUserId" parameterType="long" resultMap="bankcard">
        SELECT *
        FROM wa_bankcard
        WHERE user_id = #{userId}
    </select>

    <!--添加银行卡-->
    <insert id="addCard" parameterType="map" useGeneratedKeys="true" keyProperty="bankcardId">
        INSERT INTO wa_bankcard(user_id,add_time,bank_name,bank_account)
        VALUES (#{userId},#{addTime},#{bankName},#{bankAccount})
    </insert>

    <!--添加银行卡-->
    <insert id="delCard" parameterType="long">
        DELETE from wa_bankcard
        WHERE bankcard_id = #{bankcardId}
    </insert>

    <insert id="create" parameterType="org.wella.entity.Bankcard" useGeneratedKeys="true" keyProperty="bankcardId">
        insert into wa_bankcard (user_id, bank_name,
      add_time, account, account_name,
      cert_type, cert_num, phone,
      open_bank_tgfi, open_bank_name, state
      )
    values (#{userId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR},
      #{addTime,jdbcType=TIMESTAMP}, #{account,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR},
      #{certType,jdbcType=TINYINT}, #{certNum,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{openBankTgfi,jdbcType=VARCHAR}, #{openBankName,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}
      )
    </insert>
</mapper>